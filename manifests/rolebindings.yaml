apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: binding-controller
  namespace: "###ZARF_CONST_NAMESPACE###"
subjects:
- kind: ServiceAccount
  name: controller-account
  namespace: "###ZARF_CONST_NAMESPACE###"
roleRef:
  kind: Role
  name: controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: binding-server
  namespace: "###ZARF_CONST_NAMESPACE###"
subjects:
- kind: ServiceAccount
  name: argo-server
  namespace: "###ZARF_CONST_NAMESPACE###"
roleRef:
  kind: Role
  name: server-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: binding-workflow
  namespace: "###ZARF_CONST_NAMESPACE###"
subjects:
- kind: ServiceAccount
  name: argo-workflow
  namespace: "###ZARF_CONST_NAMESPACE###"
roleRef:
  kind: Role
  name: workflow-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: binding-api
  namespace: "###ZARF_CONST_NAMESPACE###"
subjects:
- kind: ServiceAccount
  name: wfapi
  namespace: "###ZARF_CONST_NAMESPACE###"
roleRef:
  kind: Role
  name: server-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: wfapi.service-account-token
  namespace: "###ZARF_CONST_NAMESPACE###"
  annotations:
    kubernetes.io/service-account.name: wfapi
type: kubernetes.io/service-account-token
